<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>RAG on PKT</title>
    <link>https://piktx.github.io/tags/rag/</link>
    <description>Recent content in RAG on PKT</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://piktx.github.io/tags/rag/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Chat with Excel files using RAG</title>
      <link>https://piktx.github.io/posts/rag-over-excel/</link>
      <pubDate>Wed, 29 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://piktx.github.io/posts/rag-over-excel/</guid>
      <description>An intelligent chatbot that performs RAG on Excel files using cutting-edge AI models.</description>
    </item>
    <item>
      <title>Gemini Flash 2.0 MultiModal Chatbot</title>
      <link>https://piktx.github.io/projects/gemini-flash-chatbot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://piktx.github.io/projects/gemini-flash-chatbot/</guid>
      <description>A Streamlit application demonstrating a multimodal chatbot using Google&amp;#39;s Gemini Flash 2.0 model.</description>
    </item>
    <item>
      <title>RAG over Excel with IBM Docling and Llama 3.2</title>
      <link>https://piktx.github.io/projects/rag-over-excel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://piktx.github.io/projects/rag-over-excel/</guid>
      <description>Perform Retrieval-Augmented Generation (RAG) for Excel files with Llama 3.2 and Docling locally.</description>
    </item>
    <item>
      <title>MarkAI RAG</title>
      <link>https://piktx.github.io/projects/markai-rag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://piktx.github.io/projects/markai-rag/</guid>
      <description>Use RAG with Groq API, Microsoft MarkItDown, and PandasAI for smart document querying.</description>
    </item>
  </channel>
</rss>
